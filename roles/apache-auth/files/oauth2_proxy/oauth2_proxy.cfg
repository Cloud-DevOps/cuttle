# {{ ansible_managed }}

## OAuth2 Proxy Config File
## https://github.com/bitly/oauth2_proxy

## <addr>:<port> to listen on for HTTP/HTTPS clients
http_address = "127.0.0.1:8080"

provider = "github"

## the OAuth Redirect URL.
# defaults to the "https://" + requested host header + "/oauth2/callback"
redirect_url = "https://cuttle.local/oauth2/callback"


## the http url(s) of the upstream endpoint. If multiple, routing is based on path
upstreams = "http://127.0.0.1:8081"

## The OAuth Client ID, Secret
client_id = "XXXXXXXX"
client_secret = "XXXXXXXXXXXXXX"

## Log requests to stdout
request_logging = true

## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
email_domains = "*"

## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
pass_access_token = true

## Cookie Settings
## Name     - the cookie name
## Secret   - the seed string for secure cookies; should be 16, 24, or 32 bytes
##            for use with an AES cipher when cookie_refresh or pass_access_token
##            is set
## Domain   - (optional) cookie domain to force cookies to (ie: .yourcompany.com)
## Expire   - (duration) expire timeframe for cookie
## Refresh  - (duration) refresh the cookie when duration has elapsed after cookie was initially set.
##            Should be less than cookie_expire; set to 0 to disable.
##            On refresh, OAuth token is re-validated.
##            (ie: 1h means tokens are refreshed on request 1hr+ after it was set)
## Secure   - secure cookies are only sent by the browser of a HTTPS connection (recommended)
## HttpOnly - httponly cookies are not readable by javascript (recommended)
cookie_name = "oauth2_proxy_cookie"
cookie_secret = "oauth2_proxy_secret_pass"
cookie_domain = ""
cookie_expire = "168h"
cookie_refresh = "24h"
cookie_secure = true
cookie_httponly = false
